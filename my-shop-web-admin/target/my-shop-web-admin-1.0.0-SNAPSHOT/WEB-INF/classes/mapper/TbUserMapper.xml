<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="work.idler.my.shop.web.admin.dao.TbUserDao">
    <select id="selectAll" resultType="TbUser">
        SELECT
          a.id,
          a.username,
          a.password,
          a.phone,
          a.email,
          a.created,
          a.updated
        FROM
          tb_user AS a
    </select>

    <insert id="insert">
        INSERT INTO tb_user (
          `username`,
          `password`,
          `phone`,
          `email`,
          `created`,
          `updated`
        )
        VALUES
          (
            #{username},
            #{password},
            #{phone},
            #{email},
            #{created},
            #{updated}
          )
    </insert>
    
    <sql id="tbUserColumns">
        a.id,
        a.username,
        a.password,
        a.phone,
        a.email,
        a.created,
        a.updated
    </sql>

    <update id="update">
        update
            tb_user
        set
            username = #{username},
            password = #{password},
            phone = #{phone},
            email = #{email},
            updated = #{updated}
        where id = #{id}
    </update>

    <select id="getByEmail" resultType="TbUser">
        select
        <include refid="tbUserColumns"/>
        from
        tb_user as a
        where
        a.email = #{email}
    </select>

    <select id="getById" resultType="TbUser">
        select
        <include refid="tbUserColumns"/>
        from
        tb_user as a
        where
        a.id = #{id}
    </select>

    <select id="search" resultType="TbUser">
        select
        <include refid="tbUserColumns"/>
        from
        tb_user as a
        <where>
            <if test="username != null and username != ''">
                and a.username like concat ('%', #{username}, '%')
            </if>
            <if test="phone != null and phone != ''">
                and a.phone like concat ('%', #{phone}, '%')
            </if>
            <if test="email != null and email != ''">
                and a.email like concat ('%', #{email}, '%')
            </if>
        </where>
    </select>

    <delete id="deleteMulti">
        delete from tb_user
        where id in
        <foreach collection="array" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>
</mapper>